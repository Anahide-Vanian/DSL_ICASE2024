/**
 * generated by Xtext 2.32.0
 */
package dk.sdu.bdd.xtext.bddDsl.impl;

import dk.sdu.bdd.xtext.bddDsl.BddDslPackage;
import dk.sdu.bdd.xtext.bddDsl.DeclarativeEntityPropertyStatePhrase;
import dk.sdu.bdd.xtext.bddDsl.DeclarativeEntityRef;
import dk.sdu.bdd.xtext.bddDsl.PropertyDef;
import dk.sdu.bdd.xtext.bddDsl.SimpleValue;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Declarative Entity Property State Phrase</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link dk.sdu.bdd.xtext.bddDsl.impl.DeclarativeEntityPropertyStatePhraseImpl#getProperty <em>Property</em>}</li>
 *   <li>{@link dk.sdu.bdd.xtext.bddDsl.impl.DeclarativeEntityPropertyStatePhraseImpl#getEntity <em>Entity</em>}</li>
 *   <li>{@link dk.sdu.bdd.xtext.bddDsl.impl.DeclarativeEntityPropertyStatePhraseImpl#getValue <em>Value</em>}</li>
 *   <li>{@link dk.sdu.bdd.xtext.bddDsl.impl.DeclarativeEntityPropertyStatePhraseImpl#getValues <em>Values</em>}</li>
 * </ul>
 *
 * @generated
 */
public class DeclarativeEntityPropertyStatePhraseImpl extends DeclarativeStatePhraseImpl implements DeclarativeEntityPropertyStatePhrase
{
  /**
   * The cached value of the '{@link #getProperty() <em>Property</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getProperty()
   * @generated
   * @ordered
   */
  protected PropertyDef property;

  /**
   * The cached value of the '{@link #getEntity() <em>Entity</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEntity()
   * @generated
   * @ordered
   */
  protected DeclarativeEntityRef entity;

  /**
   * The cached value of the '{@link #getValue() <em>Value</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getValue()
   * @generated
   * @ordered
   */
  protected SimpleValue value;

  /**
   * The cached value of the '{@link #getValues() <em>Values</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getValues()
   * @generated
   * @ordered
   */
  protected EList<SimpleValue> values;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected DeclarativeEntityPropertyStatePhraseImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return BddDslPackage.Literals.DECLARATIVE_ENTITY_PROPERTY_STATE_PHRASE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public PropertyDef getProperty()
  {
    if (property != null && property.eIsProxy())
    {
      InternalEObject oldProperty = (InternalEObject)property;
      property = (PropertyDef)eResolveProxy(oldProperty);
      if (property != oldProperty)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, BddDslPackage.DECLARATIVE_ENTITY_PROPERTY_STATE_PHRASE__PROPERTY, oldProperty, property));
      }
    }
    return property;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public PropertyDef basicGetProperty()
  {
    return property;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setProperty(PropertyDef newProperty)
  {
    PropertyDef oldProperty = property;
    property = newProperty;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, BddDslPackage.DECLARATIVE_ENTITY_PROPERTY_STATE_PHRASE__PROPERTY, oldProperty, property));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public DeclarativeEntityRef getEntity()
  {
    return entity;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetEntity(DeclarativeEntityRef newEntity, NotificationChain msgs)
  {
    DeclarativeEntityRef oldEntity = entity;
    entity = newEntity;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, BddDslPackage.DECLARATIVE_ENTITY_PROPERTY_STATE_PHRASE__ENTITY, oldEntity, newEntity);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setEntity(DeclarativeEntityRef newEntity)
  {
    if (newEntity != entity)
    {
      NotificationChain msgs = null;
      if (entity != null)
        msgs = ((InternalEObject)entity).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - BddDslPackage.DECLARATIVE_ENTITY_PROPERTY_STATE_PHRASE__ENTITY, null, msgs);
      if (newEntity != null)
        msgs = ((InternalEObject)newEntity).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - BddDslPackage.DECLARATIVE_ENTITY_PROPERTY_STATE_PHRASE__ENTITY, null, msgs);
      msgs = basicSetEntity(newEntity, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, BddDslPackage.DECLARATIVE_ENTITY_PROPERTY_STATE_PHRASE__ENTITY, newEntity, newEntity));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public SimpleValue getValue()
  {
    return value;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetValue(SimpleValue newValue, NotificationChain msgs)
  {
    SimpleValue oldValue = value;
    value = newValue;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, BddDslPackage.DECLARATIVE_ENTITY_PROPERTY_STATE_PHRASE__VALUE, oldValue, newValue);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setValue(SimpleValue newValue)
  {
    if (newValue != value)
    {
      NotificationChain msgs = null;
      if (value != null)
        msgs = ((InternalEObject)value).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - BddDslPackage.DECLARATIVE_ENTITY_PROPERTY_STATE_PHRASE__VALUE, null, msgs);
      if (newValue != null)
        msgs = ((InternalEObject)newValue).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - BddDslPackage.DECLARATIVE_ENTITY_PROPERTY_STATE_PHRASE__VALUE, null, msgs);
      msgs = basicSetValue(newValue, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, BddDslPackage.DECLARATIVE_ENTITY_PROPERTY_STATE_PHRASE__VALUE, newValue, newValue));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<SimpleValue> getValues()
  {
    if (values == null)
    {
      values = new EObjectContainmentEList<SimpleValue>(SimpleValue.class, this, BddDslPackage.DECLARATIVE_ENTITY_PROPERTY_STATE_PHRASE__VALUES);
    }
    return values;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case BddDslPackage.DECLARATIVE_ENTITY_PROPERTY_STATE_PHRASE__ENTITY:
        return basicSetEntity(null, msgs);
      case BddDslPackage.DECLARATIVE_ENTITY_PROPERTY_STATE_PHRASE__VALUE:
        return basicSetValue(null, msgs);
      case BddDslPackage.DECLARATIVE_ENTITY_PROPERTY_STATE_PHRASE__VALUES:
        return ((InternalEList<?>)getValues()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case BddDslPackage.DECLARATIVE_ENTITY_PROPERTY_STATE_PHRASE__PROPERTY:
        if (resolve) return getProperty();
        return basicGetProperty();
      case BddDslPackage.DECLARATIVE_ENTITY_PROPERTY_STATE_PHRASE__ENTITY:
        return getEntity();
      case BddDslPackage.DECLARATIVE_ENTITY_PROPERTY_STATE_PHRASE__VALUE:
        return getValue();
      case BddDslPackage.DECLARATIVE_ENTITY_PROPERTY_STATE_PHRASE__VALUES:
        return getValues();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case BddDslPackage.DECLARATIVE_ENTITY_PROPERTY_STATE_PHRASE__PROPERTY:
        setProperty((PropertyDef)newValue);
        return;
      case BddDslPackage.DECLARATIVE_ENTITY_PROPERTY_STATE_PHRASE__ENTITY:
        setEntity((DeclarativeEntityRef)newValue);
        return;
      case BddDslPackage.DECLARATIVE_ENTITY_PROPERTY_STATE_PHRASE__VALUE:
        setValue((SimpleValue)newValue);
        return;
      case BddDslPackage.DECLARATIVE_ENTITY_PROPERTY_STATE_PHRASE__VALUES:
        getValues().clear();
        getValues().addAll((Collection<? extends SimpleValue>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case BddDslPackage.DECLARATIVE_ENTITY_PROPERTY_STATE_PHRASE__PROPERTY:
        setProperty((PropertyDef)null);
        return;
      case BddDslPackage.DECLARATIVE_ENTITY_PROPERTY_STATE_PHRASE__ENTITY:
        setEntity((DeclarativeEntityRef)null);
        return;
      case BddDslPackage.DECLARATIVE_ENTITY_PROPERTY_STATE_PHRASE__VALUE:
        setValue((SimpleValue)null);
        return;
      case BddDslPackage.DECLARATIVE_ENTITY_PROPERTY_STATE_PHRASE__VALUES:
        getValues().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case BddDslPackage.DECLARATIVE_ENTITY_PROPERTY_STATE_PHRASE__PROPERTY:
        return property != null;
      case BddDslPackage.DECLARATIVE_ENTITY_PROPERTY_STATE_PHRASE__ENTITY:
        return entity != null;
      case BddDslPackage.DECLARATIVE_ENTITY_PROPERTY_STATE_PHRASE__VALUE:
        return value != null;
      case BddDslPackage.DECLARATIVE_ENTITY_PROPERTY_STATE_PHRASE__VALUES:
        return values != null && !values.isEmpty();
    }
    return super.eIsSet(featureID);
  }

} //DeclarativeEntityPropertyStatePhraseImpl
