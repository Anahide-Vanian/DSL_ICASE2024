/**
 * generated by Xtext 2.32.0
 */
package dk.sdu.bdd.xtext.bddDsl.impl;

import dk.sdu.bdd.xtext.bddDsl.BddDslPackage;
import dk.sdu.bdd.xtext.bddDsl.ImperativePropertyDef;
import dk.sdu.bdd.xtext.bddDsl.ImperativePropertyRef;
import dk.sdu.bdd.xtext.bddDsl.StringValue;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Imperative Property Ref</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link dk.sdu.bdd.xtext.bddDsl.impl.ImperativePropertyRefImpl#getPropertyref <em>Propertyref</em>}</li>
 *   <li>{@link dk.sdu.bdd.xtext.bddDsl.impl.ImperativePropertyRefImpl#getProperty <em>Property</em>}</li>
 *   <li>{@link dk.sdu.bdd.xtext.bddDsl.impl.ImperativePropertyRefImpl#getPropertyValue <em>Property Value</em>}</li>
 *   <li>{@link dk.sdu.bdd.xtext.bddDsl.impl.ImperativePropertyRefImpl#getProperyValue2 <em>Propery Value2</em>}</li>
 *   <li>{@link dk.sdu.bdd.xtext.bddDsl.impl.ImperativePropertyRefImpl#getPropery2 <em>Propery2</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ImperativePropertyRefImpl extends MinimalEObjectImpl.Container implements ImperativePropertyRef
{
  /**
   * The default value of the '{@link #getPropertyref() <em>Propertyref</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPropertyref()
   * @generated
   * @ordered
   */
  protected static final String PROPERTYREF_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getPropertyref() <em>Propertyref</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPropertyref()
   * @generated
   * @ordered
   */
  protected String propertyref = PROPERTYREF_EDEFAULT;

  /**
   * The cached value of the '{@link #getProperty() <em>Property</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getProperty()
   * @generated
   * @ordered
   */
  protected ImperativePropertyDef property;

  /**
   * The cached value of the '{@link #getPropertyValue() <em>Property Value</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPropertyValue()
   * @generated
   * @ordered
   */
  protected StringValue propertyValue;

  /**
   * The cached value of the '{@link #getProperyValue2() <em>Propery Value2</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getProperyValue2()
   * @generated
   * @ordered
   */
  protected StringValue properyValue2;

  /**
   * The cached value of the '{@link #getPropery2() <em>Propery2</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPropery2()
   * @generated
   * @ordered
   */
  protected ImperativePropertyDef propery2;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ImperativePropertyRefImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return BddDslPackage.Literals.IMPERATIVE_PROPERTY_REF;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getPropertyref()
  {
    return propertyref;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setPropertyref(String newPropertyref)
  {
    String oldPropertyref = propertyref;
    propertyref = newPropertyref;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, BddDslPackage.IMPERATIVE_PROPERTY_REF__PROPERTYREF, oldPropertyref, propertyref));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ImperativePropertyDef getProperty()
  {
    if (property != null && property.eIsProxy())
    {
      InternalEObject oldProperty = (InternalEObject)property;
      property = (ImperativePropertyDef)eResolveProxy(oldProperty);
      if (property != oldProperty)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, BddDslPackage.IMPERATIVE_PROPERTY_REF__PROPERTY, oldProperty, property));
      }
    }
    return property;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ImperativePropertyDef basicGetProperty()
  {
    return property;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setProperty(ImperativePropertyDef newProperty)
  {
    ImperativePropertyDef oldProperty = property;
    property = newProperty;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, BddDslPackage.IMPERATIVE_PROPERTY_REF__PROPERTY, oldProperty, property));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public StringValue getPropertyValue()
  {
    return propertyValue;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetPropertyValue(StringValue newPropertyValue, NotificationChain msgs)
  {
    StringValue oldPropertyValue = propertyValue;
    propertyValue = newPropertyValue;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, BddDslPackage.IMPERATIVE_PROPERTY_REF__PROPERTY_VALUE, oldPropertyValue, newPropertyValue);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setPropertyValue(StringValue newPropertyValue)
  {
    if (newPropertyValue != propertyValue)
    {
      NotificationChain msgs = null;
      if (propertyValue != null)
        msgs = ((InternalEObject)propertyValue).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - BddDslPackage.IMPERATIVE_PROPERTY_REF__PROPERTY_VALUE, null, msgs);
      if (newPropertyValue != null)
        msgs = ((InternalEObject)newPropertyValue).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - BddDslPackage.IMPERATIVE_PROPERTY_REF__PROPERTY_VALUE, null, msgs);
      msgs = basicSetPropertyValue(newPropertyValue, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, BddDslPackage.IMPERATIVE_PROPERTY_REF__PROPERTY_VALUE, newPropertyValue, newPropertyValue));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public StringValue getProperyValue2()
  {
    return properyValue2;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetProperyValue2(StringValue newProperyValue2, NotificationChain msgs)
  {
    StringValue oldProperyValue2 = properyValue2;
    properyValue2 = newProperyValue2;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, BddDslPackage.IMPERATIVE_PROPERTY_REF__PROPERY_VALUE2, oldProperyValue2, newProperyValue2);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setProperyValue2(StringValue newProperyValue2)
  {
    if (newProperyValue2 != properyValue2)
    {
      NotificationChain msgs = null;
      if (properyValue2 != null)
        msgs = ((InternalEObject)properyValue2).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - BddDslPackage.IMPERATIVE_PROPERTY_REF__PROPERY_VALUE2, null, msgs);
      if (newProperyValue2 != null)
        msgs = ((InternalEObject)newProperyValue2).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - BddDslPackage.IMPERATIVE_PROPERTY_REF__PROPERY_VALUE2, null, msgs);
      msgs = basicSetProperyValue2(newProperyValue2, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, BddDslPackage.IMPERATIVE_PROPERTY_REF__PROPERY_VALUE2, newProperyValue2, newProperyValue2));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ImperativePropertyDef getPropery2()
  {
    if (propery2 != null && propery2.eIsProxy())
    {
      InternalEObject oldPropery2 = (InternalEObject)propery2;
      propery2 = (ImperativePropertyDef)eResolveProxy(oldPropery2);
      if (propery2 != oldPropery2)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, BddDslPackage.IMPERATIVE_PROPERTY_REF__PROPERY2, oldPropery2, propery2));
      }
    }
    return propery2;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ImperativePropertyDef basicGetPropery2()
  {
    return propery2;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setPropery2(ImperativePropertyDef newPropery2)
  {
    ImperativePropertyDef oldPropery2 = propery2;
    propery2 = newPropery2;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, BddDslPackage.IMPERATIVE_PROPERTY_REF__PROPERY2, oldPropery2, propery2));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case BddDslPackage.IMPERATIVE_PROPERTY_REF__PROPERTY_VALUE:
        return basicSetPropertyValue(null, msgs);
      case BddDslPackage.IMPERATIVE_PROPERTY_REF__PROPERY_VALUE2:
        return basicSetProperyValue2(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case BddDslPackage.IMPERATIVE_PROPERTY_REF__PROPERTYREF:
        return getPropertyref();
      case BddDslPackage.IMPERATIVE_PROPERTY_REF__PROPERTY:
        if (resolve) return getProperty();
        return basicGetProperty();
      case BddDslPackage.IMPERATIVE_PROPERTY_REF__PROPERTY_VALUE:
        return getPropertyValue();
      case BddDslPackage.IMPERATIVE_PROPERTY_REF__PROPERY_VALUE2:
        return getProperyValue2();
      case BddDslPackage.IMPERATIVE_PROPERTY_REF__PROPERY2:
        if (resolve) return getPropery2();
        return basicGetPropery2();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case BddDslPackage.IMPERATIVE_PROPERTY_REF__PROPERTYREF:
        setPropertyref((String)newValue);
        return;
      case BddDslPackage.IMPERATIVE_PROPERTY_REF__PROPERTY:
        setProperty((ImperativePropertyDef)newValue);
        return;
      case BddDslPackage.IMPERATIVE_PROPERTY_REF__PROPERTY_VALUE:
        setPropertyValue((StringValue)newValue);
        return;
      case BddDslPackage.IMPERATIVE_PROPERTY_REF__PROPERY_VALUE2:
        setProperyValue2((StringValue)newValue);
        return;
      case BddDslPackage.IMPERATIVE_PROPERTY_REF__PROPERY2:
        setPropery2((ImperativePropertyDef)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case BddDslPackage.IMPERATIVE_PROPERTY_REF__PROPERTYREF:
        setPropertyref(PROPERTYREF_EDEFAULT);
        return;
      case BddDslPackage.IMPERATIVE_PROPERTY_REF__PROPERTY:
        setProperty((ImperativePropertyDef)null);
        return;
      case BddDslPackage.IMPERATIVE_PROPERTY_REF__PROPERTY_VALUE:
        setPropertyValue((StringValue)null);
        return;
      case BddDslPackage.IMPERATIVE_PROPERTY_REF__PROPERY_VALUE2:
        setProperyValue2((StringValue)null);
        return;
      case BddDslPackage.IMPERATIVE_PROPERTY_REF__PROPERY2:
        setPropery2((ImperativePropertyDef)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case BddDslPackage.IMPERATIVE_PROPERTY_REF__PROPERTYREF:
        return PROPERTYREF_EDEFAULT == null ? propertyref != null : !PROPERTYREF_EDEFAULT.equals(propertyref);
      case BddDslPackage.IMPERATIVE_PROPERTY_REF__PROPERTY:
        return property != null;
      case BddDslPackage.IMPERATIVE_PROPERTY_REF__PROPERTY_VALUE:
        return propertyValue != null;
      case BddDslPackage.IMPERATIVE_PROPERTY_REF__PROPERY_VALUE2:
        return properyValue2 != null;
      case BddDslPackage.IMPERATIVE_PROPERTY_REF__PROPERY2:
        return propery2 != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (propertyref: ");
    result.append(propertyref);
    result.append(')');
    return result.toString();
  }

} //ImperativePropertyRefImpl
